{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Spain covid 19 daily counts data\n",
    "This notebook shows how to fetch the daily updated covid 19 cases data from Spain (on the autonomous community level) from https://covid19.isciii.es/, and joined it together with demographic data.\n",
    "\n",
    "\n",
    "https://covid19.isciii.es/ provides the following fields:\n",
    "- autonomous_community_iso\n",
    "- date\n",
    "- cases\n",
    "- hospitalized\n",
    "- intensive care unit (icu)\n",
    "- deceased\n",
    "- recovered\n",
    "\n",
    "The following sources were used for one time access:\n",
    " 1. https://en.wikipedia.org/wiki/Autonomous_communities_of_Spain provides the following data for the 19 Spanish Autonomous Communities\n",
    "  - area\n",
    "  - population\n",
    "  - density\n",
    "  - gdp_per_capita_euros"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>autonomous_community_iso</th>\n",
       "      <th>area_km_squared</th>\n",
       "      <th>population</th>\n",
       "      <th>gdp_per_capita_euros</th>\n",
       "      <th>density_pop_per_km_squared</th>\n",
       "      <th>date</th>\n",
       "      <th>cases</th>\n",
       "      <th>hospitalized</th>\n",
       "      <th>icu</th>\n",
       "      <th>deceased</th>\n",
       "      <th>recovered</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Spain</td>\n",
       "      <td>AN</td>\n",
       "      <td>87268.0</td>\n",
       "      <td>8414240</td>\n",
       "      <td>16960</td>\n",
       "      <td>96.418389</td>\n",
       "      <td>2020-02-20</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Spain</td>\n",
       "      <td>AR</td>\n",
       "      <td>47719.0</td>\n",
       "      <td>1319291</td>\n",
       "      <td>25540</td>\n",
       "      <td>27.647080</td>\n",
       "      <td>2020-02-20</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Spain</td>\n",
       "      <td>AS</td>\n",
       "      <td>10604.0</td>\n",
       "      <td>1022800</td>\n",
       "      <td>21035</td>\n",
       "      <td>96.454168</td>\n",
       "      <td>2020-02-20</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Spain</td>\n",
       "      <td>IB</td>\n",
       "      <td>4992.0</td>\n",
       "      <td>1149460</td>\n",
       "      <td>24393</td>\n",
       "      <td>230.260417</td>\n",
       "      <td>2020-02-20</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Spain</td>\n",
       "      <td>CN</td>\n",
       "      <td>7447.0</td>\n",
       "      <td>2153389</td>\n",
       "      <td>19568</td>\n",
       "      <td>289.161944</td>\n",
       "      <td>2020-02-20</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  country autonomous_community_iso  area_km_squared  population  \\\n",
       "0   Spain                       AN          87268.0     8414240   \n",
       "1   Spain                       AR          47719.0     1319291   \n",
       "2   Spain                       AS          10604.0     1022800   \n",
       "3   Spain                       IB           4992.0     1149460   \n",
       "4   Spain                       CN           7447.0     2153389   \n",
       "\n",
       "   gdp_per_capita_euros  density_pop_per_km_squared       date  cases  \\\n",
       "0                 16960                   96.418389 2020-02-20    0.0   \n",
       "1                 25540                   27.647080 2020-02-20    0.0   \n",
       "2                 21035                   96.454168 2020-02-20    0.0   \n",
       "3                 24393                  230.260417 2020-02-20    1.0   \n",
       "4                 19568                  289.161944 2020-02-20    1.0   \n",
       "\n",
       "   hospitalized  icu  deceased  recovered  \n",
       "0           0.0  0.0       0.0        0.0  \n",
       "1           0.0  0.0       0.0        0.0  \n",
       "2           0.0  0.0       0.0        0.0  \n",
       "3           0.0  0.0       0.0        0.0  \n",
       "4           0.0  0.0       0.0        0.0  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from task_geo.data_sources.covid.spain import es_covid\n",
    "\n",
    "data = es_covid()\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "task-geo",
   "language": "python",
   "name": "task-geo"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
